{
  "path": "example.py",
  "module": "example",
  "classes": [
    {
      "name": "Entity",
      "fields": [
        {
          "name": "id",
          "type": "int"
        },
        {
          "name": "created_at",
          "type": "datetime.datetime"
        },
        {
          "name": "updated_at",
          "type": "datetime.datetime"
        }
      ],
      "methods": [
        {
          "reciever": "Entity",
          "function": {
            "name": "__init__",
            "parameters": [
              {
                "name": "self",
                "type": "Any"
              },
              {
                "name": "id",
                "type": "int"
              }
            ],
            "return_types": [
              "None"
            ],
            "body": ""
          }
        },
        {
          "reciever": "Entity",
          "function": {
            "name": "update",
            "parameters": [
              {
                "name": "self",
                "type": "Any"
              }
            ],
            "return_types": [
              "None"
            ],
            "body": ""
          }
        },
        {
          "reciever": "Entity",
          "function": {
            "name": "age",
            "parameters": [
              {
                "name": "self",
                "type": "Any"
              }
            ],
            "return_types": [
              "datetime.timedelta"
            ],
            "body": ""
          }
        }
      ]
    },
    {
      "name": "GenericRepository",
      "fields": [
        {
          "name": "_entities",
          "type": "Dict[Tuple[int, T]]"
        },
        {
          "name": "_next_id",
          "type": "int"
        },
        {
          "name": "_entity_type",
          "type": "type"
        }
      ],
      "methods": [
        {
          "reciever": "GenericRepository",
          "function": {
            "name": "__init__",
            "parameters": [
              {
                "name": "self",
                "type": "Any"
              },
              {
                "name": "entity_type",
                "type": "type"
              }
            ],
            "return_types": [
              "None"
            ],
            "body": ""
          }
        },
        {
          "reciever": "GenericRepository",
          "function": {
            "name": "find_by_id",
            "parameters": [
              {
                "name": "self",
                "type": "Any"
              },
              {
                "name": "id",
                "type": "int"
              }
            ],
            "return_types": [
              "Optional[T]"
            ],
            "body": ""
          }
        },
        {
          "reciever": "GenericRepository",
          "function": {
            "name": "find_all",
            "parameters": [
              {
                "name": "self",
                "type": "Any"
              }
            ],
            "return_types": [
              "List[T]"
            ],
            "body": ""
          }
        },
        {
          "reciever": "GenericRepository",
          "function": {
            "name": "save",
            "parameters": [
              {
                "name": "self",
                "type": "Any"
              },
              {
                "name": "entity",
                "type": "T"
              }
            ],
            "return_types": [
              "T"
            ],
            "body": ""
          }
        },
        {
          "reciever": "GenericRepository",
          "function": {
            "name": "delete",
            "parameters": [
              {
                "name": "self",
                "type": "Any"
              },
              {
                "name": "id",
                "type": "int"
              }
            ],
            "return_types": [
              "bool"
            ],
            "body": ""
          }
        },
        {
          "reciever": "GenericRepository",
          "function": {
            "name": "create_for",
            "parameters": [
              {
                "name": "cls",
                "type": "Any"
              },
              {
                "name": "entity_type",
                "type": "type"
              }
            ],
            "return_types": [
              "GenericRepository[Any]"
            ],
            "body": ""
          }
        }
      ]
    },
    {
      "name": "User",
      "fields": [
        {
          "name": "username",
          "type": "str"
        },
        {
          "name": "email",
          "type": "str"
        },
        {
          "name": "password_hash",
          "type": "str"
        },
        {
          "name": "is_active",
          "type": "bool"
        },
        {
          "name": "roles",
          "type": "List[str]"
        }
      ],
      "methods": [
        {
          "reciever": "User",
          "function": {
            "name": "__post_init__",
            "parameters": [
              {
                "name": "self",
                "type": "Any"
              }
            ],
            "return_types": [
              "None"
            ],
            "body": ""
          }
        },
        {
          "reciever": "User",
          "function": {
            "name": "set_password",
            "parameters": [
              {
                "name": "self",
                "type": "Any"
              },
              {
                "name": "password",
                "type": "str"
              }
            ],
            "return_types": [
              "None"
            ],
            "body": ""
          }
        },
        {
          "reciever": "User",
          "function": {
            "name": "check_password",
            "parameters": [
              {
                "name": "self",
                "type": "Any"
              },
              {
                "name": "password",
                "type": "str"
              }
            ],
            "return_types": [
              "bool"
            ],
            "body": ""
          }
        },
        {
          "reciever": "User",
          "function": {
            "name": "is_admin",
            "parameters": [
              {
                "name": "self",
                "type": "Any"
              }
            ],
            "return_types": [
              "bool"
            ],
            "body": ""
          }
        }
      ]
    },
    {
      "name": "AuthService",
      "fields": [
        {
          "name": "_user_repository",
          "type": "GenericRepository[User]"
        },
        {
          "name": "_token_generator",
          "type": "Callable[Tuple[List, str]]"
        }
      ],
      "methods": [
        {
          "reciever": "AuthService",
          "function": {
            "name": "__init__",
            "parameters": [
              {
                "name": "self",
                "type": "Any"
              },
              {
                "name": "user_repository",
                "type": "GenericRepository[User]"
              },
              {
                "name": "token_generator",
                "type": "Callable[Tuple[List, str]]"
              }
            ],
            "return_types": [
              "None"
            ],
            "body": ""
          }
        },
        {
          "reciever": "AuthService",
          "function": {
            "name": "authenticate",
            "parameters": [
              {
                "name": "self",
                "type": "Any"
              },
              {
                "name": "username",
                "type": "str"
              },
              {
                "name": "password",
                "type": "str"
              }
            ],
            "return_types": [
              "AuthService.AuthResult"
            ],
            "body": ""
          }
        }
      ]
    }
  ],
  "interfaces": [
    {
      "name": "Repository",
      "methods": [
        {
          "name": "find_by_id",
          "parameters": [
            {
              "name": "self",
              "type": "Any"
            },
            {
              "name": "id",
              "type": "int"
            }
          ],
          "return_types": [
            "Optional[Entity]"
          ],
          "body": ""
        },
        {
          "name": "save",
          "parameters": [
            {
              "name": "self",
              "type": "Any"
            },
            {
              "name": "entity",
              "type": "Entity"
            }
          ],
          "return_types": [
            "Entity"
          ],
          "body": ""
        },
        {
          "name": "delete",
          "parameters": [
            {
              "name": "self",
              "type": "Any"
            },
            {
              "name": "id",
              "type": "int"
            }
          ],
          "return_types": [
            "bool"
          ],
          "body": ""
        }
      ]
    }
  ],
  "functions": [
    {
      "name": "create_user_service",
      "parameters": [
        {
          "name": "connection_string",
          "type": "str"
        }
      ],
      "return_types": [
        "Tuple[Tuple[GenericRepository[User], AuthService]]"
      ],
      "body": ""
    },
    {
      "name": "process_input",
      "parameters": [
        {
          "name": "value",
          "type": "Union[Tuple[str, int, List[str]]]"
        }
      ],
      "return_types": [
        "Tuple[str",
        "List[str]]"
      ],
      "body": ""
    },
    {
      "name": "create_validator",
      "parameters": [
        {
          "name": "predicate",
          "type": "Callable[Tuple[List, bool]]"
        }
      ],
      "return_types": [
        "Callable[Tuple[List, bool]]"
      ],
      "body": ""
    },
    {
      "name": "main",
      "parameters": [],
      "return_types": [
        "None"
      ],
      "body": ""
    }
  ]
}